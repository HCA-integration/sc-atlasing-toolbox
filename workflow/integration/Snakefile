"""
Integration
"""
from pathlib import Path
import pandas as pd

from utils import get_hyperparams, get_params, get_resource, get_wildcards_from_config, set_defaults, wildcards_to_str


def get_input(wildcards):
  assert wildcards.dataset in config['DATASETS'].keys()
  assert 'input' in config['DATASETS'][wildcards.dataset].keys()
  assert 'integration' in config['DATASETS'][wildcards.dataset]['input'].keys()
  return config['DATASETS'][wildcards.dataset]['input']['integration']


module_name = 'integration'
config = set_defaults(config,module_name)
out_dir = Path(config['output_dir']) / module_name

os.environ['LD_LIBRARY_PATH'] = os.environ['CONDA_EXE'].replace('bin/conda', 'lib')

envvars:
   'LD_LIBRARY_PATH'

parameters = pd.read_table(workflow.source_path('params.tsv'))
parameters['output_type'] = parameters['output_type'].str.split(',')
parameters = get_wildcards_from_config(
    config=config['DATASETS'],
    config_keys=config['defaults']['datasets'],
    config_params=['integration', 'label', 'batch', 'lineage'],
    wildcard_names=['dataset', 'method', 'label', 'batch', 'lineage_key'],
    explode_by='method',
).merge(parameters,on='method')

parameters = parameters.merge(get_hyperparams(config,module='integration'),on=['dataset', 'method'],how='left')
wildcard_names = ['dataset', 'method', 'batch', 'label', 'hyperparams']

wildcard_constraints:
    dataset='\w+',
    method='\w+',
    batch='\w+',
    label='\w+',
    hyperparams='((?![/]).)*',


module common:
    snakefile: "../common/Snakefile"
    config: config


use rule * from common as common_ *


include: 'rules/integration.smk'
include: 'rules/lineage.smk'
include: 'rules/benchmark.smk'


rule all:
    input:
        rules.run_all.input,
        #rules.run_lineages_all.input,
        rules.plots.input
    default_target: True


rule dependency_graph:
    input:
        expand(
            rules.common_dependency_graph.input,
            images=config['images'] + f'/{module_name}',
            target='all'
        )
