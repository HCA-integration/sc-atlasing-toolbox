"""
Integration
"""
from pathlib import Path
import numpy as np
import pandas as pd

from utils.environments import get_env
from IntegrationConfig import IntegrationConfig


mcfg = IntegrationConfig(
    module_name='integration',
    config=config,
    parameters=workflow.source_path('params.tsv'),
    config_params=['methods', 'batch', 'label', 'norm_counts', 'raw_counts'],
    wildcard_names=['method', 'batch', 'label', 'output_type'],
    rename_config_params={'methods': 'method'},
    explode_by=['method', 'batch', 'label'],
)

out_dir = mcfg.out_dir
image_dir = mcfg.image_dir
paramspace = mcfg.get_paramspace()


os.environ['LD_LIBRARY_PATH'] = os.environ['CONDA_EXE'].replace('bin/conda', 'lib')
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '0'

envvars:
    'LD_LIBRARY_PATH',
    'TF_CPP_MIN_LOG_LEVEL',

wildcard_constraints:
    dataset='\w+',
    method='\w+',
    batch='((?![/]).)*',
    label='((?![/]).)*',
    hyperparams='((?![/]).)*',


module preprocessing:
    snakefile: "../../preprocessing/rules/rules.smk"
    config: config

module integration:
    snakefile: "rules.smk"
    config: config

module clustering:
    snakefile: "../../clustering/rules/rules.smk"
    config: config

module plots:
    snakefile: "../../common/rules/plots.smk"
    config: config

module common:
    snakefile: "../common/Snakefile"
    config: config

use rule * from common as common_ *


include: 'rules/integration.smk'
include: 'rules/benchmark.smk'
include: 'rules/umap.smk'
# include: 'rules/clustering.smk'


rule all:
    input:
        rules.run_all.input,
        # rules.clustering_all.input,
        rules.plots_all.input,
    default_target: True


rule dependency_graph:
    input:
        expand(
            rules.common_dependency_graph.input,
            images=mcfg.image_dir,
            target='all'
        )
