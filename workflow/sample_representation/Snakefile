"""
Sample representations
"""
from pathlib import Path
import pandas as pd

from utils.environments import get_env
from SampleRepresentationConfig import SampleRepresentationConfig

mcfg = SampleRepresentationConfig(
    module_name='sample_representation',
    config=config,
    parameters=workflow.source_path('params.tsv'),
    config_params=[
        'methods',
        'sample_key',
        'cell_type_key',
        'use_rep',
        'var_mask',
        'norm_counts',
        'raw_counts',
        'aggregate',
        'min_cells_per_sample',
        'min_cells_per_cell_type',
    ],
    wildcard_names=['method', 'input_type', 'use_rep', 'var_mask'],
    rename_config_params={'methods': 'method'},
    explode_by=['method', 'use_rep', 'var_mask'],
)
paramspace = mcfg.get_paramspace()

include: "rules/prepare.smk"
include: "rules/methods.smk"


rule all:
    input:
        mcfg.get_output_files(rules.prepare.output),
        mcfg.get_output_files(rules.run_method.output),
    default_target: True
    localrule: True


module common:
    snakefile: "../common/Snakefile"
    config: config

use rule * from common as common_ *


rule dependency_graph:
    input:
        expand(
            rules.common_dependency_graph.input,
            images=mcfg.image_dir,
            target='all'
        )
    localrule: True
