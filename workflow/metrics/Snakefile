"""
Metrics
"""
from pathlib import Path
import numpy as np
import pandas as pd
from snakemake.utils import Paramspace

from utils import all_but, get_hyperparams, expand_per, get_params, get_resource, get_wildcards, get_wildcards_from_config, \
    set_defaults, wildcards_to_str


os.environ['LD_LIBRARY_PATH'] = os.environ['CONDA_EXE'].replace('bin/conda', 'lib')
os.environ['XLA_PYTHON_CLIENT_PREALLOCATE'] = 'FALSE'

envvars:
   'LD_LIBRARY_PATH',
   'XLA_PYTHON_CLIENT_PREALLOCATE'

module integration:
    snakefile: "../integration/Snakefile"
    config: config

use rule * from integration as integration_ *


module_name = 'metrics'
config = set_defaults(config,module_name)
out_dir = Path(config['output_dir']) / module_name

wildcards_df = get_wildcards_from_config(
    config=config['DATASETS'],
    config_keys=config['defaults']['datasets'],
    config_params=['integration', 'metrics', 'label', 'batch', 'lineage'],
    wildcard_names=['dataset', 'method', 'metric', 'label', 'batch', 'lineage_key'],
    explode_by=['method', 'metric', 'lineage_key'],
)

parameters = pd.read_table(workflow.source_path('params.tsv'))
parameters = wildcards_df \
    .merge(parameters,on='metric') \
    .merge(get_hyperparams(config,module='integration'),on=['dataset', 'method'],how='left')
parameters['lineage_key'] = parameters['lineage_key'].astype(str)

# setup lineage specific integration
def determine_lineage_specific(lineage_key):
    if lineage_key == 'None':
        return ['global']
    return ['per_lineage', 'global']

parameters['lineage_specific'] = parameters.apply(
    lambda row: determine_lineage_specific(row['lineage_key']), axis=1
)
parameters = parameters.explode('lineage_specific')

wildcard_names = ['dataset', 'method', 'metric', 'batch', 'label', 'hyperparams', 'lineage_key', 'lineage_specific']
paramspace = Paramspace(
    parameters[[w for w in wildcard_names if w != 'metric']],
    filename_params=['batch', 'label', 'hyperparams', 'lineage_key'],
    filename_sep=',',
)

wildcard_constraints:
    dataset='\w+',
    method='\w+',
    batch='\w+',
    label='\w+',
    hyperparams='((?![/]).)*',
    lineage_key='((?![/]).)*',
    lineage_specific='((?![/]).)*',


module common:
    snakefile: "../common/Snakefile"
    config: config


use rule * from common as common_ *


include: 'rules/metrics.smk'
include: 'rules/merge.smk'
include: 'rules/plots.smk'

rule all:
    input:
        rules.merge.output,
        rules.plots_all.input
    default_target: True


rule dependency_graph:
    input:
        expand(
            rules.common_dependency_graph.input,
            images=config['images'] + f'/{module_name}',
            target='all'
        )
