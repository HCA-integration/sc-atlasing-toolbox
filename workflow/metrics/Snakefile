"""
Metrics
"""
from pathlib import Path
import pandas as pd

from utils import all_but, get_hyperparams, expand_per, get_params, get_resource, get_wildcards, get_wildcards_from_config, \
    set_defaults, wildcards_to_str


module integration:
    snakefile: "../integration/Snakefile"
    config: config

use rule * from integration as integration_ *


module_name = 'metrics'
config = set_defaults(config,module_name)
out_dir = Path(config['output_dir']) / module_name

wildcards_df = get_wildcards_from_config(
    config=config['DATASETS'],
    config_keys=config['defaults']['datasets'],
    config_params=['integration', 'metrics', 'label', 'batch'],
    wildcard_names=['dataset', 'method', 'metric', 'label', 'batch'],
    explode_by=['method', 'metric'],
)

# # get wildcards from input directory
# datasets, methods = glob_wildcards(in_path)
# integration_wildcards = pd.DataFrame({'dataset': datasets, 'method': methods})
# # get full parameters
# wildcards_df = get_wildcards_from_config(
#     config=config,
#     config_params=['metrics', 'label', 'batch'],
#     wildcard_names=['dataset', 'metric', 'label', 'batch'],
#     explode_by='metric'
# ).merge(
#     integration_wildcards,
#     on='dataset'
# )

parameters = pd.read_table(workflow.source_path('params.tsv'))
parameters = wildcards_df \
    .merge(parameters,on='metric') \
    .merge(get_hyperparams(config,module='integration'),on=['dataset', 'method'],how='left')

wildcard_names = ['dataset', 'method', 'metric', 'batch', 'label', 'hyperparams']

wildcard_constraints:
    dataset='\w+',
    method='\w+',
    batch='\w+',
    label='\w+',
    hyperparams='((?![/]).)*',

module common:
    snakefile: "../common/Snakefile"
    config: config


use rule * from common as common_ *


include: 'rules/metrics.smk'
include: 'rules/merge.smk'
include: 'rules/plots.smk'

rule all:
    input:
        rules.merge.output,
        rules.plots_all.input
    default_target: True


rule dependency_graph:
    input:
        expand(
            rules.common_dependency_graph.input,
            images=config['images'] + f'/{module_name}',
            target='all'
        )
