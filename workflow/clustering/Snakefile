"""
Clustering
"""
from pathlib import Path
import pandas as pd

# from utils.misc import all_but, unique_dataframe
# from utils.config import get_resource, set_defaults, get_datasets_for_module, get_for_dataset, \
#     get_input_file, get_input_file_wildcards
from utils.environments import get_env
from utils.ModuleConfig import ModuleConfig


mcfg = ModuleConfig(
    module_name='clustering',
    config=config,
    config_params=[
        'recompute_neighbors',
        'neighbors',
        'umap_exists',
        'neighbors_key',
        'resolutions',
        'algorithm',
    ],
    rename_config_params={'resolutions': 'resolution'},
    explode_by='resolution',
    dtypes={'recompute_neighbors': bool, 'umap_exists': bool, 'resolution': str},
)
paramspace = mcfg.get_paramspace()


wildcard_constraints:
    dataset='\w+',
    file_id='\w+',

module common:
    snakefile: "../common/Snakefile"
    config: config

use rule * from common as common_ *

module clustering:
    snakefile: "rules.smk"
    config: config

include: 'rules/clustering.smk'


rule all:
    input:
        mcfg.get_output_files(rules.clustering_merge.output),
        mcfg.get_output_files(rules.clustering_plot_umap.output),
    default_target: True
    localrule: True


rule dependency_graph:
    input:
        expand(
            rules.common_dependency_graph.input,
            images=mcfg.image_dir,
            target='all'
        )
    localrule: True

