"""
Clustering
"""
from pathlib import Path
import pandas as pd

# from utils.misc import all_but, unique_dataframe
# from utils.config import get_resource, set_defaults, get_datasets_for_module, get_for_dataset, \
#     get_input_file, get_input_file_wildcards
from utils.environments import get_env
from utils.ModuleConfig import ModuleConfig


mcfg = ModuleConfig(
    module_name='clustering',
    config=config,
    config_params=['neighbors_key', 'resolutions'],
    wildcard_names=['neighbors_key', 'resolution'],
)
wildcards_df = mcfg.get_wildcards(as_df=True)
wildcards_df = wildcards_df.explode('resolution').reset_index(drop=True)
mcfg.parameters.update(wildcards_df)
paramspace = mcfg.get_paramspace(exclude=['neighbors_key', 'resolution'])


wildcard_constraints:
    dataset='((?![/]).)*',


module common:
    snakefile: "../common/Snakefile"
    config: config

use rule * from common as common_ *

module clustering:
    snakefile: "rules.smk"
    config: config

include: 'rules/clustering.smk'


rule all:
    input:
        mcfg.get_output_files(rules.clustering_merge.output),
        mcfg.get_output_files(rules.clustering_plot_umap.output),
    default_target: True


rule dependency_graph:
    input:
        expand(
            rules.common_dependency_graph.input,
            images=mcfg.image_dir,
            target='all'
        )

